{"name":"Blackhole","tagline":"Yet another logging library.","body":"# Welcome to Blackhole documentation.\r\n\r\n# Architecture\r\n\r\nBlackhole was originally conceived as project with clearly separated entities, or modules. Mainly this decision was made because the project can be easily tested and expanded if it consists of independent entities than with the coupled ones.\r\n\r\nLet's start our description with the fact that we represent Blackhole logger as the production line on which some cargos are transported and some work is done with them. This can be represented schematically as follows:\r\n\r\n![Alt text](http://3hren.github.io/blackhole/images/architecture.png)\r\n\r\nThe main transport unit in our case - is log event.\r\n\r\nInternally Blackhole events are mutual attributes container. Event is considered valid if there is at least one attribute in it. At this point let's talk what attributes are.\r\n\r\n## Attributes\r\n\r\nNowadays logs are much more than just a message with attached timestamp and severity level and [Logstash](http://logstash.net)'s experience proves that. Of course that information provides a fairly comprehensive view about whatâ€™s going on and how important occurred event is, but the main problem that the event itself is completely unstructured and it's quite difficult to use in a further processing like extracting all logs with specific value in message.\r\n\r\nImagine that you are logging some http request. How do you form your logging event? Well, personally I imagine something like this:\r\n```\r\n[2014-03-30 15:30:00.000000] [INFO]: GET '/index/type/id' failed with 404: document not found\r\n```","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}